{
	// Place your GLOBAL snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"getCookie": {
		"prefix": "getCookie",
		"body": [
			"// クッキーを取得",
			"const getCookie = (name) => {",
			"    // 「;」で区切り、個々のクッキーを配列で取得",
			"    const cookies = document.cookie.split(';');",
			"    // クッキーをfor文で1つずつチェック",
			"    for (let i = 0; i < cookies.length; i++) {",
			"        // 「=」でクッキーを分割し、クッキー名と値を取得",
			"        const [cookieName, value] = cookies[i].trim().split('=');",
			"        // クッキー名が一致したら、その値をデコードしてreturn",
			"        if (cookieName === name) {",
			"            return decodeURIComponent(value);",
			"        }",
			"    }",
			"    // 見つからなかったら空文字をreturn",
			"    return '';",
			"};"
		]
	}
}